from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, ContextTypes
)
import logging

BOT_TOKEN = 'YOUR_BOT_TOKEN'  # Replace this with your bot token from BotFather
ADMIN_IDS = [123456789]       # Replace this with your Telegram User ID
RULES_TEXT = "Welcome! Group Rules: No spamming. No NSFW. Be respectful."
BAN_WORDS = ["porn", "sex", "nude"]
user_messages = {}

logging.basicConfig(level=logging.INFO)

# Check if the user is an admin
async def is_admin(update: Update) -> bool:
    return update.effective_user.id in ADMIN_IDS

# Start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if await is_admin(update):
        await update.message.reply_text("Bot is active. Admin mode enabled.")

# Set group rules
async def set_rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if await is_admin(update):
        global RULES_TEXT
        RULES_TEXT = ' '.join(context.args)
        await update.message.reply_text("Rules updated!")

# Add a banned word
async def add_ban_word(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if await is_admin(update):
        if context.args:
            word = ' '.join(context.args)
            BAN_WORDS.append(word.lower())
            await update.message.reply_text(f"Added to ban list: {word}")
        else:
            await update.message.reply_text("Please specify a word to ban.")

# List banned words
async def list_ban_words(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if await is_admin(update):
        await update.message.reply_text(f"Current banned words: {', '.join(BAN_WORDS)}")

# Handle normal messages and ban users if they use banned words
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.lower()
    group_id = update.message.chat_id

    # Track user messages
    if group_id not in user_messages:
        user_messages[group_id] = {}
    if user_id not in user_messages[group_id]:
        user_messages[group_id][user_id] = []
    user_messages[group_id][user_id].append(update.message.message_id)

    # Check for banned words
    for word in BAN_WORDS:
        if word in text:
            try:
                await update.message.delete()
            except Exception as e:
                logging.error(f"Failed to delete message: {e}")

            try:
                await context.bot.ban_chat_member(chat_id=group_id, user_id=user_id)
            except Exception as e:
                logging.error(f"Failed to ban user: {e}")

            # Delete their past messages
            for msg_id in user_messages[group_id][user_id]:
                try:
                    await context.bot.delete_message(chat_id=group_id, message_id=msg_id)
                except Exception:
                    continue

            await context.bot.send_message(
                chat_id=group_id,
                text=f"User {update.effective_user.full_name} was banned for inappropriate content."
            )
            break

# Welcome new members
async def new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    for member in update.message.new_chat_members:
        await update.message.reply_text(RULES_TEXT)

# Help command
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if await is_admin(update):
        await update.message.reply_text("""
Admin Commands:
/setrules <text> - Set group rules
/addbanword <word> - Add a banned word
/listbanwords - List banned words
/help - Show this help
""")

# Main entry
if _name_ == '_main_':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # Register handlers
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("setrules", set_rules))
    app.add_handler(CommandHandler("addbanword", add_ban_word))
    app.add_handler(CommandHandler("listbanwords", list_ban_words))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & filters.ChatType.GROUPS, handle_message))
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, new_member))

    # Start the bot
    app.run_polling()